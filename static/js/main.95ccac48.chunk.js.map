{"version":3,"sources":["30s.png","components/Logo.tsx","components/Team.tsx","components/CurrentTeam.tsx","components/Dice.tsx","components/Timer.tsx","components/Words.tsx","components/Countdown.tsx","components/Win.tsx","components/Result.tsx","components/Game.tsx","components/Credit.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Logo","react_default","a","createElement","className","src","IMG","Team","props","_useState","useState","players","points","currentPlayer","_useState2","Object","slicedToArray","teams","setTeams","_useState3","_useState4","inputs","setInputs","_useState5","_useState6","winPoints","setWinPoints","lib","position","ToastsContainerPosition","BOTTOM_CENTER","store","ToastsStore","lightBackground","map","team","teamIndex","key","onClick","prevTeams","filter","i","j","removeTeam","length","player","playerIndex","tidx","pidx","objectSpread","toConsumableArray","splice","removePlayer","DeleteIcon_default","size","color","onSubmit","event","preventDefault","value","autoComplete","disabled","name","onChange","e","target","v","handleChange","placeholder","id","trim","idx","double","error","concat","addPlayer","AccountPlusIcon_default","parseInt","handleChangeWinPoints","type","onTeamsCreated","handleStartGame","CurrentTeam","_ref","currentTeam","findIndex","Dice","maxDice","onDiceRolled","components_CurrentTeam","max","Math","floor","random","Timer","doneTimer","timerValue","setTimerValue","useEffect","countdownTimer","setTimeout","Words","words","setWords","selectedCategories","dutchWords","categories","sort","slice","cWords","push","components_Timer","currentTeamIndex","diceValue","word","index","getCorrectWords","document","querySelectorAll","currentPoints","Countdown","doneCountdown","countdownValue","setCountdownValue","Confetti","require","Win","window","location","replace","Result","winPointsValue","setNextTeam","sortedTeams","team1","team2","TrophyIcon_default","getTeamsSortedByPoints","Game","setCurrentTeam","setDiceValue","_useState7","_useState8","gameStage","setGameStage","_useState9","_useState10","correctWords","setCorrectWords","_useState11","_useState12","setWinPointsValue","_useState13","_useState14","gameOver","setGameOver","getRandomTeam","addPoints","undefined","components_Win","components_Team","createdTeams","doneTeam","components_Dice","doneDiceRoll","components_Countdown","components_Words","amount","components_Result","Credit","href","rel","colors","randomColor","body","style","backgroundColor","setRandomBackGroundColor","App","components_Logo","components_Game","components_Credit","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95ccac48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/30s.40c52c0c.png\";","import React from 'react';\r\nimport IMG from '../30s.png';\r\nimport '../styles/Logo.scss';\r\n\r\nconst Logo = () => <img className=\"logo\" src={IMG}/>;\r\n\r\nexport default Logo;","import React, { useState } from 'react';\r\nimport ITeam from '../types/Types';\r\nimport AddPlayerIcon from 'mdi-react/AccountPlusIcon';\r\nimport DeleteIcon from 'mdi-react/DeleteIcon';\r\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\r\nimport '../styles/Team.scss';\r\n\r\nconst Team = (props: any) => {\r\n    const initialState = [{ players: [], points: 0, currentPlayer: 0 }, { players: [], points: 0, currentPlayer: 0 }]\r\n    const [teams, setTeams] = useState<Array<ITeam>>(initialState);\r\n    const [inputs, setInputs] = useState<Array<string>>(['', '']);\r\n    const [winPoints, setWinPoints] = useState<number>(50);\r\n\r\n    const addPlayer = (teamIndex: number): void => {\r\n        if (inputs[teamIndex])\r\n            if (inputs[teamIndex].trim() === \"\") {\r\n            } else {\r\n                setTeams(prevTeams => {\r\n                    return prevTeams.map((team, idx) => {\r\n                        if (teamIndex === idx) {\r\n                            let double = false;\r\n                            team.players.map((player) => {\r\n                                if (player === inputs[teamIndex]) {\r\n                                    double = true;\r\n                                    ToastsStore.error(\"Spelers mogen niet dezelfde naam hebben!\");\r\n                                };\r\n                            });\r\n                            return double ? { ...prevTeams[teamIndex] } : { ...prevTeams[teamIndex], players: [...prevTeams[teamIndex].players, inputs[teamIndex]] };\r\n                        } else {\r\n                            return team;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n    }\r\n\r\n    const removePlayer = (teamIndex: number, playerIndex: number): void => {\r\n        setTeams(prevTeams => {\r\n            return prevTeams.map((team, tidx) => {\r\n                if (teamIndex === tidx) {\r\n                    team.players.map((p, pidx) => {\r\n                        if (playerIndex === pidx) {\r\n                            return { ...prevTeams[teamIndex], players: [...prevTeams[teamIndex].players.splice(playerIndex, 1)] };\r\n                        } else {\r\n                            return team;\r\n                        }\r\n                    });\r\n                    return team;\r\n                } else {\r\n                    return team;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const addTeam = (): void => {\r\n        if (teams.length < 7) {\r\n            setInputs(inputs.concat(''));\r\n            setTeams(prevTeams => {\r\n                return prevTeams.concat({ players: [], points: 0, currentPlayer: 0 });\r\n            });\r\n        } else {\r\n            ToastsStore.error(\"U mag maximaal 6 teams!\");\r\n        }\r\n    }\r\n\r\n    const removeTeam = (teamIndex: number): void => {\r\n        setTeams(prevTeams => {\r\n            const list = prevTeams.filter((i, j) => teamIndex !== j);\r\n            return list;\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e: any, i: number): void => {\r\n        e.preventDefault();\r\n        setInputs(\r\n            inputs.map((value, j) => {\r\n                if (j === i) value = \"\";\r\n                return value;\r\n            })\r\n        );\r\n    }\r\n\r\n    const handleChange = (e: any, i: number): void => {\r\n        let value = e.target.value;\r\n        setInputs(\r\n            inputs.map((v: any, j: number) => {\r\n                if (j === i) {\r\n                    return value;\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    const handleChangeWinPoints = (e: any): void => {\r\n        let value = parseInt(e.target.value);\r\n        if (!(value < 0)) {\r\n            setWinPoints(value);\r\n        }\r\n    }\r\n\r\n    const handleStartGame = (): void => {\r\n        for (let i = 0; i < teams.length; i++) {\r\n            if (teams[i].players.length < 2) {\r\n                ToastsStore.error(\"Team \" + (i + 1) + \" moet minimaal uit 2 spelers bestaan!\");\r\n                return;\r\n            } else {\r\n                if (i === teams.length - 1) {\r\n                    props.onTeamsCreated(teams, winPoints);\r\n                    return;\r\n                } else {\r\n                    ToastsStore.error(\"Ongeldige teams!\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"game-teams-title\">Stel de teams samen!</h2>\r\n            <div className=\"teams-wrapper\">\r\n                <ToastsContainer position={ToastsContainerPosition.BOTTOM_CENTER} store={ToastsStore} lightBackground />\r\n                {teams.map((team, teamIndex) => {\r\n                    return (\r\n                        <div key={teamIndex} className=\"team-card\">\r\n                            <div className=\"team-card-header\">\r\n                                <h2 className=\"team-card-header-title\">Team {teamIndex + 1}</h2>\r\n                                <button onClick={() => removeTeam(teamIndex)} className=\"team-card-header-button\">X</button>\r\n                            </div>\r\n                            {team.players.length > 0 ? <div>\r\n                                {team.players.map((player, playerIndex) => {\r\n                                    return (\r\n                                        <div key={playerIndex} className=\"team-card-content-player\">\r\n                                            <span>{playerIndex + 1}. {player}</span>\r\n                                            <button onClick={() => removePlayer(teamIndex, playerIndex)} className=\"team-card-content-player-button\"><DeleteIcon size={20} color=\"#7f8fa6\" /></button>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div> : null}\r\n                            <form onSubmit={(event) => handleSubmit(event, teamIndex)} className=\"team-card-actions\" autoComplete=\"off\">\r\n                                <input disabled={team.players.length === 8 ? true : false} name={\"input\" + teamIndex} value={inputs[teamIndex] || ''} onChange={(event) => handleChange(event, teamIndex)} placeholder={\"Naam speler \" + (team.players.length + 1)} className=\"team-card-actions-input\" id={inputs[teamIndex] === \"\" ? \"error\" : \"\"} />\r\n                                <button disabled={team.players.length === 8 ? true : false} onClick={() => addPlayer(teamIndex)} className=\"team-card-actions-button\"><AddPlayerIcon /></button>\r\n                            </form>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"team-actions\">\r\n                <div className=\"win\"><span className=\"win-text\">Het team dat als eerste </span><input value={winPoints} onChange={(e) => handleChangeWinPoints(e)} type=\"number\" className=\"win-points\"></input><span className=\"win-text\"> punten haalt, wint!</span></div>\r\n                <div>\r\n                    <button onClick={() => addTeam()} disabled={teams.length === 6 ? true : false} className=\"button-style\">Team toevoegen</button>\r\n                    <button onClick={() => handleStartGame()} disabled={teams.length < 2 ? true : false} className=\"button-style\">Start Spel!</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Team;","import React from 'react';\r\nimport ITeam from '../types/Types';\r\n\r\ninterface Props {\r\n    currentTeam: ITeam;\r\n    teams: Array<ITeam>;\r\n}\r\n\r\nconst CurrentTeam = ({ currentTeam, teams }: Props) => (\r\n    <span className=\"game-current\">\r\n        {currentTeam ? <h2>{\"Team \" + ((teams.findIndex((team) => team === currentTeam)) + 1)}</h2> : null}\r\n        {currentTeam ? currentTeam.players[currentTeam.currentPlayer] + \" is aan de beurt\" : null}\r\n    </span>\r\n);\r\n\r\nexport default CurrentTeam;","import React from 'react';\r\nimport ITeam from '../types/Types';\r\nimport '../styles/Game.scss';\r\nimport CurrentTeam from './CurrentTeam';\r\n\r\ninterface Props {\r\n    currentTeam: ITeam;\r\n    teams: Array<ITeam>;\r\n    onDiceRolled: (value: number) => void;\r\n    maxDice: number;\r\n}\r\n\r\nconst Dice = ({ currentTeam, teams, maxDice, onDiceRolled }: Props) => {\r\n\r\n    const rollDice = (max: number): void => {\r\n        onDiceRolled(Math.floor(Math.random() * Math.floor(max)));\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-dice\">\r\n            <h2 className=\"game-dice-title\">Gooi de dobbelsteen!</h2>\r\n            <CurrentTeam currentTeam={currentTeam} teams={teams} />\r\n            <button onClick={() => rollDice(maxDice)} className=\"game-dice-button dice-grow\">\r\n                ?\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Dice;","import React, { useState, useEffect } from 'react';\r\nimport '../styles/Timer.scss';\r\n\r\ninterface Props {\r\n    doneTimer: () => void;\r\n}\r\n\r\nconst Timer = ({ doneTimer }: Props) => {\r\n    const [timerValue, setTimerValue] = useState<number>(30);\r\n\r\n    useEffect(() => {\r\n        countdownTimer();\r\n    }, [timerValue]);\r\n\r\n    const countdownTimer = (): void => {\r\n        timerValue > 0 ? setTimeout(() => setTimerValue(timerValue - 1), 1000) : doneTimer();\r\n    }\r\n\r\n    return (\r\n        <div className=\"circle center\">\r\n            <div className=\"count\">{timerValue}</div>\r\n            <div className=\"l-half\"></div>\r\n            <div className=\"r-half\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timer;","import React, { useState, useEffect } from 'react';\r\nimport Timer from './Timer';\r\nimport dutchWords from '../nl.json';\r\nimport ITeam from '../types/Types.jsx';\r\nimport '../styles/Words.scss';\r\n\r\ninterface Props {\r\n    diceValue: number;\r\n    currentTeamIndex: number;\r\n    currentTeam: ITeam;\r\n    currentPoints: number;\r\n    doneTimer: () => void;\r\n    getCorrectWords: (amount: number) => void;\r\n}\r\n\r\nconst Words = (props: Props) => {\r\n    const [words, setWords] = useState<Array<string>>([]);\r\n\r\n    useEffect(() => {\r\n        const shuffledCategories = dutchWords.categories.sort(() => 0.5 - Math.random());\r\n        let selectedCategories = shuffledCategories.slice(0, 5);\r\n        let cWords: Array<string> = [];\r\n\r\n        for (let i = 0; i < selectedCategories.length; i++) {\r\n            let random = selectedCategories[i].words[Math.floor(Math.random() * selectedCategories[i].words.length)];\r\n            cWords.push(random);\r\n        }\r\n\r\n        setWords(cWords);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"words-wrapper\">\r\n            <Timer doneTimer={() => props.doneTimer()} />\r\n            <div className=\"words-card\">\r\n                <div className=\"words-title-dice\">\r\n                    <div className=\"words-current\">\r\n                        {props.currentTeam ? <h2 className=\"words-current-team-title\">{\"Team \" + props.currentTeamIndex}</h2> : null}\r\n                        {props.currentTeam ? <span>{props.currentTeam.players[props.currentTeam.currentPlayer] + \" is aan de beurt\"}</span> : null}\r\n                    </div>\r\n                    <div className=\"words-dice-wrapper\">\r\n                        <h2 className=\"words-title\">Je gooide:</h2>\r\n                        <div className=\"words-dice\">\r\n                            {props.diceValue}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr className=\"words-hr\" />\r\n                <form className=\"words-form\">\r\n                    {words.map((word, index) => {\r\n                        return (\r\n                            <label key={index} className=\"words-form-label\">\r\n                                <input type=\"checkbox\" name={word} value={word} onChange={() => {\r\n                                    props.getCorrectWords(document.querySelectorAll('input[type=\"checkbox\"]:checked').length);\r\n                                }} />\r\n                                <span className=\"words-form-label-text\">{word}</span>\r\n                                <span className=\"words-form-checkmark\"></span>\r\n                            </label>\r\n                        );\r\n                    })}\r\n                </form>\r\n                <hr className=\"words-hr\" />\r\n                <div className=\"words-result-wrapper\">\r\n                    <span className=\"words-result\">Totaal punten: <span className=\"words-result-value\">{props.currentPoints}</span></span>\r\n                    {((props.currentPoints + props.diceValue) - 5) === 0 ? <button className=\"button-style-inverted\" onClick={() => props.doneTimer()}>Volgende</button> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Words;","import React, { useState } from 'react';\r\nimport CurrentTeam from './CurrentTeam';\r\nimport ITeam from '../types/Types';\r\nimport '../styles/Countdown.scss';\r\n\r\ninterface Props {\r\n    diceValue: number;\r\n    currentTeam: ITeam;\r\n    teams: Array<ITeam>;\r\n    doneCountdown: () => void;\r\n}\r\n\r\nconst Countdown = ({ diceValue, currentTeam, teams, doneCountdown }: Props) => {\r\n    const [countdownValue, setCountdownValue] = useState<number>(5);\r\n\r\n    const countdownToStart = (): void => {\r\n        countdownValue > 0 ? setTimeout(() => setCountdownValue(countdownValue - 1), 1000) : doneCountdown();\r\n    }\r\n\r\n    countdownToStart();\r\n\r\n    return (\r\n        <div className=\"game-countdown\">\r\n            <h2 className=\"game-countdown-title\">Klaar?</h2>\r\n            <CurrentTeam\r\n                currentTeam={currentTeam}\r\n                teams={teams} />\r\n            <div className=\"circle-c center-c\">\r\n                <div className=\"count-c\">{countdownValue}</div>\r\n                <div className=\"l-half-c\"></div>\r\n                <div className=\"r-half-c\"></div>\r\n            </div>\r\n            <h2 className=\"game-countdown-title\">Je gooide:</h2>\r\n            <div className=\"game-countdown-dice\">\r\n                {diceValue}\r\n            </div>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Countdown;","import React from 'react';\r\nimport ITeam from '../types/Types';\r\nimport '../styles/Win.scss';\r\nconst Confetti = require('react-confetti');\r\n\r\ntype Props = {\r\n    team: ITeam;\r\n}\r\n\r\nconst Win = ({team}: Props) => {\r\n    return (\r\n        <div className=\"win-wrapper\">\r\n            <Confetti/>\r\n            <h1>Gefeliciteerd!</h1>\r\n            <h2>Het team van {team.players[0]} wint!</h2>\r\n            <button className=\"button-style\" onClick={() => window.location.replace(\"/30s/\")}>Speel opnieuw</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Win;","import React from 'react';\r\nimport TrophyIcon from 'mdi-react/TrophyIcon';\r\nimport ITeam from '../types/Types';\r\n\r\ninterface Props {\r\n    teams: Array<ITeam>;\r\n    winPointsValue: number;\r\n    setNextTeam: () => void;\r\n}\r\n\r\nconst Result = ({teams, winPointsValue, setNextTeam}: Props) => {\r\n\r\n    const getTeamsSortedByPoints = () => {\r\n        var sortedTeams = teams.slice(0);\r\n        sortedTeams.sort((team1, team2) => {\r\n            return team2.points - team1.points;\r\n        });\r\n\r\n        return sortedTeams.map((team, i) => {\r\n            return (\r\n                <tr key={i} className=\"game-results-table-row\">\r\n                    <td>\r\n                        {i === 0 ? <TrophyIcon color=\"#e1b12c\" /> : null}\r\n                        {i === 1 ? <TrophyIcon color=\"#bdc3c7\" /> : null}\r\n                        {i === 2 ? <TrophyIcon color=\"#cd7f32\" /> : null}\r\n                    </td>\r\n                    <td>\r\n                        {team.players[0]}\r\n                    </td>\r\n                    <td>\r\n                        {team.points}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-results-wrapper\">\r\n            <div className=\"game-results\">\r\n                <h2 className=\"game-results-title\">Puntentotaal</h2>\r\n                <p>Het team dat als eerste {winPointsValue} punten haalt, wint!</p>\r\n                <table className=\"game-results-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>\r\n                                Team van\r\n                                </th>\r\n                            <th>\r\n                                Punten\r\n                                </th>\r\n                        </tr>\r\n                        {getTeamsSortedByPoints()}\r\n                    </tbody>\r\n                </table>\r\n                <button onClick={() => setNextTeam()} className=\"button-style-inverted\">Volgende ronde</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Result;","import React, { useState, useEffect } from 'react';\r\nimport ITeam from '../types/Types';\r\nimport Team from './Team';\r\nimport Dice from './Dice';\r\nimport Words from './Words';\r\nimport Countdown from './Countdown';\r\nimport Win from './Win';\r\nimport Result from './Result';\r\nimport '../styles/Game.scss';\r\n\r\nconst Game = () => {\r\n    const [teams, setTeams] = useState<Array<ITeam>>([]);\r\n    const [currentTeam, setCurrentTeam] = useState();\r\n    const [diceValue, setDiceValue] = useState<number>();\r\n    const [gameStage, setGameStage] = useState<number>(0);\r\n    const [correctWords, setCorrectWords] = useState<number>(0);\r\n    const [winPointsValue, setWinPointsValue] = useState<number>();\r\n    const [gameOver, setGameOver] = useState<ITeam>();\r\n\r\n    const getRandomTeam = (): ITeam => {\r\n        return teams[Math.floor(Math.random() * teams.length)];\r\n    }\r\n\r\n    const setNextTeam = (): void => {\r\n        const currentTeamIndex = teams.findIndex((team) => team.players === currentTeam.players);\r\n        setDiceValue(undefined);\r\n        setCorrectWords(0);\r\n        setGameStage(1);\r\n\r\n        if (currentTeamIndex === (teams.length - 1)) {\r\n            setCurrentTeam(teams[0]);\r\n        } else {\r\n            setCurrentTeam(teams[currentTeamIndex + 1]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!currentTeam) {\r\n            setCurrentTeam(getRandomTeam);\r\n        }\r\n        if (winPointsValue) {\r\n            teams.map((team) => {\r\n                if (team.points === winPointsValue || team.points > winPointsValue) {\r\n                    setGameOver(team);\r\n                }\r\n            })\r\n        }\r\n    }, [teams]);\r\n\r\n    const doneTeam = (createdTeams: Array<ITeam>, winPoints: number): void => {\r\n        setWinPointsValue(winPoints);\r\n        setTeams(createdTeams);\r\n        setGameStage(1);\r\n    }\r\n\r\n    const doneDiceRoll = (value: number): void => {\r\n        setDiceValue(value);\r\n        setGameStage(2);\r\n    }\r\n\r\n    const doneCountdown = (): void => {\r\n        setGameStage(3);\r\n    }\r\n\r\n    const doneTimer = (): void => {\r\n        addPoints();\r\n        setGameStage(4);\r\n    }\r\n\r\n    const addPoints = (): void => {\r\n        let teamIndex = teams.findIndex((team) => team === currentTeam);\r\n        setTeams(prevTeams => {\r\n            return prevTeams.map((team, tidx) => {\r\n                if ((teamIndex === tidx) && diceValue !== undefined) {\r\n                    if (team.currentPlayer === team.players.length - 1) {\r\n                        return { ...prevTeams[teamIndex], points: prevTeams[teamIndex].points + (correctWords - diceValue), currentPlayer: 0 };\r\n                    } else {\r\n                        return { ...prevTeams[teamIndex], points: prevTeams[teamIndex].points + (correctWords - diceValue), currentPlayer: prevTeams[teamIndex].currentPlayer + 1 };\r\n                    }\r\n                } else {\r\n                    return team;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    if (gameOver) {\r\n        return <Win team={gameOver} />;\r\n    } else {\r\n        switch (gameStage) {\r\n            case 0:\r\n                return <Team\r\n                    onTeamsCreated={(createdTeams: Array<ITeam>, winPoints: number) => doneTeam(createdTeams, winPoints)} />;\r\n            case 1:\r\n                return <Dice\r\n                    currentTeam={currentTeam}\r\n                    teams={teams}\r\n                    onDiceRolled={(value: number) => doneDiceRoll(value)}\r\n                    maxDice={3} />;\r\n            case 2:\r\n                return <Countdown\r\n                    diceValue={diceValue ? diceValue : 0}\r\n                    currentTeam={currentTeam}\r\n                    teams={teams}\r\n                    doneCountdown={() => doneCountdown()} />;\r\n            case 3:\r\n                return <Words\r\n                    diceValue={diceValue ? diceValue : 0}\r\n                    currentTeamIndex={(teams.findIndex((team) => team === currentTeam)) + 1}\r\n                    currentTeam={currentTeam}\r\n                    currentPoints={correctWords - (diceValue !== undefined ? diceValue : 0)}\r\n                    doneTimer={() => doneTimer()}\r\n                    getCorrectWords={(amount: number) => {\r\n                        setCorrectWords(amount);\r\n                    }} />;\r\n            case 4:\r\n                return <Result\r\n                    teams={teams}\r\n                    winPointsValue={winPointsValue || 0}\r\n                    setNextTeam={() => setNextTeam()} />;\r\n            default:\r\n                return <h1>Not found</h1>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Game;","import React from 'react';\r\nimport '../styles/Credit.scss';\r\n\r\nconst Credit = () => (\r\n    <div className=\"credit-wrapper\">\r\n        <a className=\"credit\" href=\"https://jvink.github.io/portfolio/#/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            More by Jurian Vink\r\n        </a>\r\n    </div>\r\n);\r\n\r\nexport default Credit;","import React from 'react';\r\nimport Logo from './components/Logo';\r\nimport Game from './components/Game';\r\nimport Credit from './components/Credit';\r\nimport './App.scss';\r\n\r\n\r\nconst setRandomBackGroundColor = (): void => {\r\n  const colors = ['#9c88ff', '#0097e6', '#e1b12c', '#27ae60', '#40739e', '#c23616', '#8e44ad', '#e67e22'];\r\n  const randomColor = colors[Math.floor(Math.random() * colors.length)];\r\n  const body: HTMLElement = document.body;\r\n  body.style.backgroundColor = randomColor;\r\n}\r\n\r\nsetRandomBackGroundColor();\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <Logo />\r\n      <div className=\"app-game-wrapper\">\r\n        <Game />\r\n      </div>\r\n      <Credit />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}