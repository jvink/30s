{"version":3,"sources":["30s.png","components/Logo.tsx","components/Team.tsx","components/Dice.tsx","components/Words.tsx","components/Countdown.tsx","components/Timer.tsx","components/Win.tsx","components/Game.tsx","components/Credit.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Logo","react_default","a","createElement","className","src","IMG","Team","props","_useState","useState","players","points","currentPlayer","_useState2","Object","slicedToArray","teams","setTeams","_useState3","_useState4","inputs","setInputs","_useState5","_useState6","winPoints","setWinPoints","lib","position","ToastsContainerPosition","BOTTOM_CENTER","store","ToastsStore","lightBackground","map","team","teamIndex","key","onClick","prevTeams","filter","i","j","removeTeam","length","player","playerIndex","tidx","pidx","objectSpread","toConsumableArray","splice","removePlayer","DeleteIcon_default","size","color","onSubmit","event","preventDefault","value","autoComplete","disabled","name","onChange","e","target","v","handleChange","placeholder","id","trim","idx","double","error","concat","addPlayer","AccountPlusIcon_default","parseInt","handleChangeWinPoints","type","onTeamsCreated","handleStartGame","Dice","_ref","maxDice","onDiceRolled","max","Math","floor","random","Words","words","setWords","useEffect","selectedCategories","dutchWords","categories","sort","slice","cWords","push","word","index","getCorrectWords","document","querySelectorAll","Countdown","doneCountdown","countdownValue","setCountdownValue","setTimeout","Timer","doneTimer","timerValue","setTimerValue","countDownTimer","Confetti","require","Win","window","location","replace","Game","currentTeam","setCurrentTeam","diceValue","setDiceValue","_useState7","_useState8","gameStage","setGameStage","_useState9","_useState10","correctWords","setCorrectWords","_useState11","_useState12","winPointsValue","setWinPointsValue","_useState13","_useState14","gameOver","setGameOver","getRandomTeam","addPoints","findIndex","undefined","getNamesCurrentTurn","style","display","flexDirection","flexWrap","components_Team","createdTeams","doneTeam","components_Dice","doneDiceRoll","components_Countdown","components_Timer","components_Words","amount","sortedTeams","team1","team2","TrophyIcon_default","getTeamsSortedByPoints","currentTeamIndex","setNextTeam","components_Win","Credit","href","rel","colors","randomColor","body","backgroundColor","setRandomBackGroundColor","App","components_Logo","components_Game","components_Credit","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a08c520e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/30s.40c52c0c.png\";","import React from 'react';\r\nimport IMG from '../30s.png';\r\nimport '../styles/Logo.scss';\r\n\r\nconst Logo = () => <img className=\"logo\" src={IMG}/>;\r\n\r\nexport default Logo;","import React, { useState } from 'react';\r\nimport ITeam from '../types/Types';\r\nimport AddPlayerIcon from 'mdi-react/AccountPlusIcon';\r\nimport DeleteIcon from 'mdi-react/DeleteIcon';\r\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\r\nimport '../styles/Team.scss';\r\n\r\nconst Team = (props: any) => {\r\n    const initialState = [{players: [], points: 0, currentPlayer: 0}, {players: [], points: 0, currentPlayer: 0}]\r\n    const [teams, setTeams] = useState<Array<ITeam>>(initialState);\r\n    const [inputs, setInputs] = useState<Array<string>>(['', '']);\r\n    const [winPoints, setWinPoints] = useState<number>(50);\r\n\r\n    const addPlayer = (teamIndex: number): void => {\r\n        if (inputs[teamIndex])\r\n        if (inputs[teamIndex].trim() === \"\") {\r\n        } else {\r\n            setTeams(prevTeams => {\r\n                return prevTeams.map((team, idx) => {\r\n                    if (teamIndex === idx) {\r\n                        let double = false;\r\n                        team.players.map((player) => {\r\n                            if (player === inputs[teamIndex]) {\r\n                                double = true;\r\n                                ToastsStore.error(\"Spelers mogen niet dezelfde naam hebben!\");\r\n                            };\r\n                        });\r\n                        return double ? {...prevTeams[teamIndex]} : {...prevTeams[teamIndex], players: [...prevTeams[teamIndex].players, inputs[teamIndex]]};\r\n                    } else {\r\n                        return team;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    const removePlayer = (teamIndex: number, playerIndex: number): void => {\r\n        setTeams(prevTeams => {\r\n            return prevTeams.map((team, tidx) => {\r\n                if(teamIndex === tidx) {\r\n                    team.players.map((p, pidx) => {\r\n                        if (playerIndex === pidx) {\r\n                            return {...prevTeams[teamIndex], players: [...prevTeams[teamIndex].players.splice(playerIndex, 1)]};\r\n                        } else {\r\n                            return team;\r\n                        }\r\n                    });\r\n                    return team;\r\n                } else {\r\n                    return team;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const addTeam = ():void => {\r\n        if (teams.length < 7) {\r\n            setInputs(inputs.concat(''));\r\n            setTeams(prevTeams => {\r\n                return prevTeams.concat({players: [], points: 0, currentPlayer: 0});\r\n            });\r\n        } else {\r\n            ToastsStore.error(\"U mag maximaal 6 teams!\");\r\n        }\r\n    }\r\n\r\n    const removeTeam = (teamIndex: number):void => {\r\n        setTeams(prevTeams => {\r\n            const list = prevTeams.filter((i, j) => teamIndex !== j);\r\n            return list;\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e: any, i: number): void => {\r\n        e.preventDefault();\r\n        setInputs(\r\n            inputs.map((value, j) => {\r\n                if (j === i) value = \"\";\r\n                return value;\r\n            })\r\n        );\r\n    }\r\n\r\n    const handleChange = (e: any, i: number): void => {\r\n        let value = e.target.value;\r\n        setInputs(\r\n            inputs.map((v:any, j: number) => {\r\n                if (j===i) {\r\n                    return value;\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    const handleChangeWinPoints = (e: any): void => {\r\n        let value = parseInt(e.target.value);\r\n        if (!(value < 0)) {\r\n            setWinPoints(value);\r\n        }\r\n    }\r\n\r\n    const handleStartGame = (): void => {\r\n        for (let i = 0; i < teams.length; i++) {\r\n            if (teams[i].players.length < 2) {\r\n                ToastsStore.error(\"Team \" + (i + 1) + \" moet minimaal uit 2 spelers bestaan!\");\r\n                return;\r\n            } else {\r\n                if (i === teams.length - 1) {\r\n                    props.onTeamsCreated(teams, winPoints);\r\n                    return;\r\n                } else {\r\n                    ToastsStore.error(\"Ongeldige teams!\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"teams-wrapper\">\r\n                <ToastsContainer position={ToastsContainerPosition.BOTTOM_CENTER} store={ToastsStore} lightBackground/>\r\n                {teams.map((team, teamIndex) => {\r\n                    return (\r\n                        <div key={teamIndex} className=\"team-card\">\r\n                            <div className=\"team-card-header\">\r\n                                <h2 className=\"team-card-header-title\">Team {teamIndex + 1}</h2>\r\n                                <button onClick={() => removeTeam(teamIndex)} className=\"team-card-header-button\">X</button>\r\n                            </div>\r\n                            {team.players.length > 0 ? <div>\r\n                                {team.players.map((player, playerIndex) => {\r\n                                    return (\r\n                                        <div key={playerIndex} className=\"team-card-content-player\">\r\n                                            <span>{playerIndex + 1}. {player}</span>\r\n                                            <button onClick={() => removePlayer(teamIndex, playerIndex)} className=\"team-card-content-player-button\"><DeleteIcon size={20} color=\"#7f8fa6\"/></button>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div> : null}\r\n                            <form onSubmit={(event) => handleSubmit(event, teamIndex)} className=\"team-card-actions\" autoComplete=\"off\">\r\n                                <input disabled={team.players.length === 8 ? true : false} name={\"input\"+teamIndex} value={inputs[teamIndex] || ''} onChange={(event) => handleChange(event, teamIndex)} placeholder={\"Naam speler \" + (team.players.length + 1)} className=\"team-card-actions-input\" id={inputs[teamIndex] === \"\" ? \"error\" : \"\"}/>\r\n                                <button disabled={team.players.length === 8 ? true : false} onClick={() => addPlayer(teamIndex)} className=\"team-card-actions-button\"><AddPlayerIcon/></button>\r\n                            </form>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n                <div className=\"win\"><span>Het team dat als eerste </span><input value={winPoints} onChange={(e) => handleChangeWinPoints(e)} type=\"number\" className=\"win-points\"></input><span> punten haalt, wint!</span></div>\r\n                <button onClick={() => addTeam()} disabled={teams.length === 6 ? true : false} className=\"button-style\">Team toevoegen</button>\r\n                <button onClick={() => handleStartGame()} disabled={teams.length < 2 ? true : false} className=\"button-style\">Start Spel!</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Team;","import React from 'react';\r\nimport '../styles/Game.scss';\r\n\r\ntype Props = {\r\n    maxDice: number;\r\n    onDiceRolled: (value: number) => void;\r\n}\r\n\r\nconst Dice = ({maxDice, onDiceRolled}: Props) => {\r\n    \r\n    const rollDice = (max: number): void => {\r\n        onDiceRolled(Math.floor(Math.random() * Math.floor(max)));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => rollDice(maxDice)} className=\"game-dice-button dice-grow\">\r\n                ?\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Dice;","import React, { useState, useEffect } from 'react';\r\nimport dutchWords from '../nl.json';\r\nimport '../styles/Words.scss';\r\n\r\ninterface Props {\r\n    getCorrectWords: (amount: number) => void\r\n}\r\n\r\nconst Words = (props: Props) => {\r\n    const [words, setWords] = useState<Array<string>>([]);\r\n\r\n    useEffect(() => {\r\n        // Shuffle array\r\n        const shuffledCategories = dutchWords.categories.sort(() => 0.5 - Math.random());\r\n        // Get sub-array of first n elements after shuffled\r\n        let selectedCategories = shuffledCategories.slice(0, 5);\r\n        \r\n        // Get random word from each category\r\n        let cWords: Array<string> = [];\r\n        \r\n        for (let i = 0; i < selectedCategories.length; i ++) {\r\n            let random = selectedCategories[i].words[Math.floor(Math.random() * selectedCategories[i].words.length)];\r\n            // Push the random word in the words state\r\n            cWords.push(random);\r\n        }\r\n\r\n        setWords(cWords);\r\n    }, []);\r\n\r\n    return (\r\n        <form className=\"words\">\r\n            {words.map((word, index) => {\r\n                return (\r\n                    <label key={index} className=\"container\">{word}\r\n                        <input type=\"checkbox\" name={word} value={word} onChange={() => {\r\n                            props.getCorrectWords(document.querySelectorAll('input[type=\"checkbox\"]:checked').length);\r\n                        }}/>\r\n                        <span className=\"checkmark\"></span>\r\n                    </label>\r\n                );\r\n            })}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Words;","import React, { useState } from 'react';\r\nimport '../styles/Countdown.scss';\r\n\r\ntype Props = {\r\n    doneCountdown: () => void;\r\n}\r\n\r\nconst Countdown = ({doneCountdown}: Props) => {\r\n    const [countdownValue, setCountdownValue] = useState<number>(5);\r\n\r\n    const countdownToStart = (): void => {\r\n        countdownValue > 0 ? setTimeout(() => setCountdownValue(countdownValue - 1), 1000) : doneCountdown();\r\n    }\r\n\r\n    countdownToStart();\r\n\r\n    return (\r\n        <div className=\"circle-c center-c\">\r\n            <div className=\"count-c\">{countdownValue}</div>\r\n            <div className=\"l-half-c\"></div>\r\n            <div className=\"r-half-c\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Countdown;","import React, { useState, useEffect } from 'react';\r\nimport '../styles/Timer.scss';\r\n\r\ntype Props = {\r\n    doneTimer: () => void;\r\n}\r\n\r\nconst Timer = ({doneTimer}: Props) => {\r\n    const [timerValue, setTimerValue] = useState<number>(30);\r\n\r\n    useEffect(() => {\r\n        countDownTimer();\r\n    }, [timerValue]);\r\n\r\n    const countDownTimer = (): void => {\r\n        timerValue > 0 ? setTimeout(() => setTimerValue(timerValue - 1), 1000) : doneTimer();\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"circle center\">\r\n                <div className=\"count\">{timerValue}</div>\r\n                <div className=\"l-half\"></div>\r\n                <div className=\"r-half\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport ITeam from '../types/Types';\r\nimport '../styles/Win.scss';\r\nconst Confetti = require('react-confetti');\r\n\r\ntype Props = {\r\n    team: ITeam;\r\n}\r\n\r\nconst Win = ({team}: Props) => {\r\n    return (\r\n        <div className=\"win-wrapper\">\r\n            <Confetti/>\r\n            <h1>Gefeliciteerd!</h1>\r\n            <h2>Het team van {team.players[0]} wint!</h2>\r\n            <button className=\"button-style\" onClick={() => window.location.replace(\"/\")}>Speel opnieuw</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Win;","import React, { useState, useEffect } from 'react';\r\nimport ITeam from '../types/Types';\r\nimport Team from './Team';\r\nimport Dice from './Dice';\r\nimport Words from './Words';\r\nimport Countdown from './Countdown';\r\nimport Timer from './Timer';\r\nimport Win from './Win';\r\nimport TrophyIcon from 'mdi-react/TrophyIcon';\r\nimport '../styles/Game.scss';\r\n\r\nconst Game = () => {\r\n    const [teams, setTeams] = useState<Array<ITeam>>([]);\r\n    const [currentTeam, setCurrentTeam] = useState();\r\n    const [diceValue, setDiceValue] = useState<number>();\r\n    const [gameStage, setGameStage] = useState<number>(0);\r\n    const [correctWords, setCorrectWords] = useState<number>(0);\r\n    const [winPointsValue, setWinPointsValue] = useState<number>();\r\n    const [gameOver, setGameOver] = useState<ITeam>();\r\n\r\n    const getRandomTeam = (): ITeam => {\r\n        return teams[Math.floor(Math.random() * teams.length)];\r\n    }\r\n\r\n    const setNextTeam = (): void => {\r\n        const currentTeamIndex = teams.findIndex((team) => team.players === currentTeam.players);\r\n        setDiceValue(undefined);\r\n        setCorrectWords(0);\r\n        setGameStage(1);\r\n\r\n        if (currentTeamIndex === (teams.length - 1)) {\r\n            setCurrentTeam(teams[0]);\r\n        } else {\r\n            setCurrentTeam(teams[currentTeamIndex + 1]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!currentTeam) {\r\n            setCurrentTeam(getRandomTeam);\r\n        }\r\n        if (winPointsValue) {\r\n            teams.map((team) => {\r\n                if (team.points === winPointsValue || team.points > winPointsValue) {\r\n                    setGameOver(team);\r\n                }\r\n            })\r\n        }\r\n    }, [teams]);\r\n\r\n    const doneTeam = (createdTeams: Array<ITeam>, winPoints: number): void => {\r\n        setWinPointsValue(winPoints);\r\n        setTeams(createdTeams);\r\n        setGameStage(1);\r\n    }\r\n\r\n    const doneDiceRoll = (value: number): void => {\r\n        setDiceValue(value);\r\n        setGameStage(2);\r\n    }\r\n\r\n    const doneCountdown = (): void => {\r\n        setGameStage(3);\r\n    }\r\n\r\n    const doneTimer = (): void => {\r\n        addPoints();\r\n        setGameStage(4);\r\n    }\r\n\r\n    const addPoints = (): void => {\r\n        let teamIndex = teams.findIndex((team) => team === currentTeam);\r\n        setTeams(prevTeams => {\r\n            return prevTeams.map((team, tidx) => {\r\n                if ((teamIndex === tidx) && diceValue !== undefined) {\r\n                    if (team.currentPlayer === team.players.length - 1) {\r\n                        return { ...prevTeams[teamIndex], points: prevTeams[teamIndex].points + (correctWords - diceValue), currentPlayer: 0 };\r\n                    } else {\r\n                        return { ...prevTeams[teamIndex], points: prevTeams[teamIndex].points + (correctWords - diceValue), currentPlayer: prevTeams[teamIndex].currentPlayer + 1 };\r\n                    }\r\n                } else {\r\n                    return team;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const getNamesCurrentTurn = () => {\r\n        return (\r\n            <span className=\"game-current\">\r\n                {currentTeam ? <h2>{\"Team \" + ((teams.findIndex((team) => team === currentTeam)) + 1)}</h2> : null}\r\n                {currentTeam ? currentTeam.players[currentTeam.currentPlayer] + \" is aan de beurt\" : null}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const getTeamsSortedByPoints = () => {\r\n        var sortedTeams = teams.slice(0);\r\n        sortedTeams.sort((team1, team2) => {\r\n            return team2.points - team1.points;\r\n        });\r\n\r\n        return sortedTeams.map((team, i) => {\r\n            return (\r\n                <tr key={i} className=\"game-results-table-row\">\r\n                    <td>\r\n                        {i === 0 ? <TrophyIcon color=\"#e1b12c\" /> : null}\r\n                        {i === 1 ? <TrophyIcon color=\"#bdc3c7\" /> : null}\r\n                        {i === 2 ? <TrophyIcon color=\"#cd7f32\" /> : null}\r\n                    </td>\r\n                    <td>\r\n                        {team.players[0]}\r\n                    </td>\r\n                    <td>\r\n                        {team.points}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            {gameStage === 0 && !gameOver ?\r\n                <div style={{ display: 'flex', flexDirection: 'column', flexWrap: 'wrap' }}>\r\n                    <h2 className=\"game-teams-title\">Stel de teams samen!</h2>\r\n                    <Team onTeamsCreated={(createdTeams: Array<ITeam>, winPoints: number) => doneTeam(createdTeams, winPoints)} />\r\n                </div> : null}\r\n            {(gameStage === 1 && !gameOver) && currentTeam ?\r\n                <div className=\"game-dice\">\r\n                    <h2 className=\"game-dice-title\">Gooi de dobbelsteen!</h2>\r\n                    {getNamesCurrentTurn()}\r\n                    <Dice onDiceRolled={(value: number) => doneDiceRoll(value)} maxDice={3} />\r\n                </div> : null}\r\n            {gameStage === 2 && !gameOver ?\r\n                <div className=\"game-countdown\">\r\n                    {getNamesCurrentTurn()}\r\n                    <h2 className=\"game-countdown-title\">Je gooide:</h2>\r\n                    <div className=\"game-countdown-dice\">\r\n                        {diceValue}\r\n                    </div>\r\n                    <br />\r\n                    <h2 className=\"game-countdown-title\">Klaar?</h2>\r\n                    <Countdown doneCountdown={() => doneCountdown()} />\r\n                </div> : null}\r\n            {gameStage === 3 && !gameOver ?\r\n                <div className=\"game-words-wrapper\">\r\n                    <Timer doneTimer={() => doneTimer()} />\r\n                    <div className=\"game-words\">\r\n                        <div className=\"game-words-title-dice-wrapper\">\r\n                            {getNamesCurrentTurn()}\r\n                            <div className=\"game-words-dice-wrapper\">\r\n                                <h2 className=\"game-words-title\">Je gooide:</h2>\r\n                                <div className=\"game-words-dice\">\r\n                                    {diceValue}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr className=\"game-words-hr\" />\r\n                        <Words getCorrectWords={(amount: number) => {\r\n                            setCorrectWords(amount);\r\n                        }} />\r\n                        <hr className=\"game-words-hr\" />\r\n                        <div className=\"game-words-result\">\r\n                            Totaal punten: <span className=\"game-words-result-value\">{correctWords - (diceValue !== undefined ? diceValue : 0)}</span>\r\n                        </div>\r\n                    </div>\r\n                </div> : null}\r\n            {gameStage === 4 && winPointsValue && !gameOver ?\r\n                <div className=\"game-results\">\r\n                    <h2 className=\"game-results-title\">Puntentotaal</h2>\r\n                    <p>Het team dat als eerste {winPointsValue} punten haalt, wint!</p>\r\n                    <table className=\"game-results-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>\r\n                                    Team van\r\n                                </th>\r\n                                <th>\r\n                                    Punten\r\n                                </th>\r\n                            </tr>\r\n                            {getTeamsSortedByPoints()}\r\n                        </tbody>\r\n                    </table>\r\n                    <button onClick={() => setNextTeam()} className=\"button-style-inverted\">Volgende ronde</button>\r\n                </div> : null}\r\n            {gameOver ?\r\n                <div className=\"game-win\">\r\n                    <Win team={gameOver} />\r\n                </div> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;","import React from 'react';\r\nimport '../styles/Credit.scss';\r\n\r\nconst Credit = () => (\r\n    <div className=\"credit-wrapper\">\r\n        <a className=\"credit\" href=\"https://jvink.github.io/portfolio/#/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            More by Jurian Vink\r\n        </a>\r\n    </div>\r\n);\r\n\r\nexport default Credit;","import React from 'react';\r\nimport Logo from './components/Logo';\r\nimport Game from './components/Game';\r\nimport Credit from './components/Credit';\r\nimport './App.scss';\r\n\r\n\r\nconst setRandomBackGroundColor = (): void => {\r\n  const colors = ['#9c88ff', '#0097e6', '#e1b12c', '#27ae60', '#40739e', '#c23616', '#8e44ad', '#e67e22'];\r\n  const randomColor = colors[Math.floor(Math.random() * colors.length)];\r\n  const body: HTMLElement = document.body;\r\n  body.style.backgroundColor = randomColor;\r\n}\r\n\r\nsetRandomBackGroundColor();\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <Logo/>\r\n      <Game/>\r\n      <Credit/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}