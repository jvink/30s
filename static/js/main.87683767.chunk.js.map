{"version":3,"sources":["30s.png","components/Logo.tsx","components/Team.tsx","components/CurrentTeam.tsx","components/Dice.tsx","components/Timer.tsx","components/Words.tsx","components/Countdown.tsx","components/Win.tsx","components/Result.tsx","components/Help.tsx","components/Game.tsx","components/Credit.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Logo","react_default","a","createElement","className","alt","src","IMG","Team","props","_useState","useState","players","points","currentPlayer","_useState2","Object","slicedToArray","teams","setTeams","_useState3","_useState4","inputs","setInputs","_useState5","_useState6","winPoints","setWinPoints","dist_default","data-tip","onClick","getHelp","HelpCircleOutlineIcon_default","lib","position","ToastsContainerPosition","BOTTOM_CENTER","store","ToastsStore","lightBackground","map","team","teamIndex","key","prevTeams","filter","i","j","removeTeam","length","player","playerIndex","tidx","pidx","objectSpread","toConsumableArray","splice","removePlayer","DeleteIcon_default","size","color","onSubmit","event","preventDefault","value","autoComplete","disabled","name","onChange","e","target","v","handleChange","placeholder","id","trim","idx","double","error","concat","addPlayer","AccountPlusIcon_default","parseInt","handleChangeWinPoints","type","onTeamsCreated","handleStartGame","CurrentTeam","_ref","currentTeam","findIndex","Dice","maxDice","onDiceRolled","components_CurrentTeam","max","Math","floor","random","Timer","doneTimer","timerValue","setTimerValue","useEffect","setTimeout","Words","words","setWords","selectedCategories","dutchWords","categories","sort","slice","cWords","push","components_Timer","currentTeamIndex","diceValue","word","index","getCorrectWords","document","querySelectorAll","currentPoints","Countdown","doneCountdown","countdownValue","setCountdownValue","Confetti","require","Win","window","location","replace","Result","winPointsValue","setNextTeam","sortedTeams","team1","team2","TrophyIcon_default","getTeamsSortedByPoints","Help","resetGameStage","Game","setCurrentTeam","setDiceValue","_useState7","_useState8","gameStage","setGameStage","_useState9","_useState10","correctWords","setCorrectWords","_useState11","_useState12","setWinPointsValue","_useState13","_useState14","gameOver","setGameOver","addPoints","undefined","components_Win","components_Team","createdTeams","doneTeam","components_Dice","doneDiceRoll","components_Countdown","components_Words","amount","components_Result","components_Help","Credit","href","rel","colors","randomColor","body","style","backgroundColor","setRandomBackGroundColor","App","components_Logo","components_Game","components_Credit","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.87683767.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/30s.40c52c0c.png\";","import React from 'react';\r\nimport IMG from '../30s.png';\r\nimport '../styles/Logo.scss';\r\n\r\nconst Logo = () => <img className=\"logo\" alt=\"logo\" src={IMG}/>;\r\n\r\nexport default Logo;","import React, { useState } from 'react';\r\nimport ITeam from '../types/Types';\r\nimport AddPlayerIcon from 'mdi-react/AccountPlusIcon';\r\nimport DeleteIcon from 'mdi-react/DeleteIcon';\r\nimport HelpIcon from 'mdi-react/HelpCircleOutlineIcon';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\r\nimport '../styles/Team.scss';\r\n\r\nconst Team = (props: any) => {\r\n    const initialState = [{ players: [], points: 0, currentPlayer: 0 }, { players: [], points: 0, currentPlayer: 0 }]\r\n    const [teams, setTeams] = useState<Array<ITeam>>(initialState);\r\n    const [inputs, setInputs] = useState<Array<string>>(['', '']);\r\n    const [winPoints, setWinPoints] = useState<number>(50);\r\n\r\n    const addPlayer = (teamIndex: number): void => {\r\n        if (inputs[teamIndex])\r\n            if (inputs[teamIndex].trim() === \"\") {\r\n            } else {\r\n                setTeams(prevTeams => {\r\n                    return prevTeams.map((team, idx) => {\r\n                        if (teamIndex === idx) {\r\n                            let double = false;\r\n                            team.players.map((player) => {\r\n                                if (player === inputs[teamIndex]) {\r\n                                    double = true;\r\n                                    ToastsStore.error(\"Spelers mogen niet dezelfde naam hebben!\");\r\n                                    return null;\r\n                                };\r\n                                return null;\r\n                            });\r\n                            return double ? { ...prevTeams[teamIndex] } : { ...prevTeams[teamIndex], players: [...prevTeams[teamIndex].players, inputs[teamIndex]] };\r\n                        } else {\r\n                            return team;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n    }\r\n\r\n    const removePlayer = (teamIndex: number, playerIndex: number): void => {\r\n        setTeams(prevTeams => {\r\n            return prevTeams.map((team, tidx) => {\r\n                if (teamIndex === tidx) {\r\n                    team.players.map((p, pidx) => {\r\n                        if (playerIndex === pidx) {\r\n                            return { ...prevTeams[teamIndex], players: [...prevTeams[teamIndex].players.splice(playerIndex, 1)] };\r\n                        } else {\r\n                            return team;\r\n                        }\r\n                    });\r\n                    return team;\r\n                } else {\r\n                    return team;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const addTeam = (): void => {\r\n        if (teams.length < 7) {\r\n            setInputs(inputs.concat(''));\r\n            setTeams(prevTeams => {\r\n                return prevTeams.concat({ players: [], points: 0, currentPlayer: 0 });\r\n            });\r\n        } else {\r\n            ToastsStore.error(\"U mag maximaal 6 teams!\");\r\n        }\r\n    }\r\n\r\n    const removeTeam = (teamIndex: number): void => {\r\n        setTeams(prevTeams => {\r\n            const list = prevTeams.filter((i, j) => teamIndex !== j);\r\n            return list;\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e: any, i: number): void => {\r\n        e.preventDefault();\r\n        setInputs(\r\n            inputs.map((value, j) => {\r\n                if (j === i) value = \"\";\r\n                return value;\r\n            })\r\n        );\r\n    }\r\n\r\n    const handleChange = (e: any, i: number): void => {\r\n        let value = e.target.value;\r\n        setInputs(\r\n            inputs.map((v: any, j: number) => {\r\n                if (j === i) {\r\n                    return value;\r\n                } else {\r\n                    return null;\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    const handleChangeWinPoints = (e: any): void => {\r\n        let value = parseInt(e.target.value);\r\n        if (!(value < 0)) {\r\n            setWinPoints(value);\r\n        }\r\n    }\r\n\r\n    const handleStartGame = (): void => {\r\n        for (let i = 0; i < teams.length; i++) {\r\n            if (teams[i].players.length < 2) {\r\n                ToastsStore.error(\"Team \" + (i + 1) + \" moet minimaal uit 2 spelers bestaan!\");\r\n                return;\r\n            } else {\r\n                if (i === teams.length - 1) {\r\n                    props.onTeamsCreated(teams, winPoints);\r\n                    return;\r\n                } else {\r\n                    ToastsStore.error(\"Ongeldige teams!\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ReactTooltip />\r\n            <div className=\"game-teams-header\">\r\n                <h2 className=\"game-teams-title\">Stel de teams samen!</h2>\r\n                <h2 className=\"game-teams-help\" data-tip=\"Speluitleg\" onClick={() => props.getHelp()}><HelpIcon/></h2>\r\n            </div>\r\n            <div className=\"teams-wrapper\">\r\n                <ToastsContainer position={ToastsContainerPosition.BOTTOM_CENTER} store={ToastsStore} lightBackground />\r\n                {teams.map((team, teamIndex) => {\r\n                    return (\r\n                        <div key={teamIndex} className=\"team-card\">\r\n                            <div className=\"team-card-header\">\r\n                                <h2 className=\"team-card-header-title\">Team {teamIndex + 1}</h2>\r\n                                <button onClick={() => removeTeam(teamIndex)} className=\"team-card-header-button\">X</button>\r\n                            </div>\r\n                            {team.players.length > 0 ? <div>\r\n                                {team.players.map((player, playerIndex) => {\r\n                                    return (\r\n                                        <div key={playerIndex} className=\"team-card-content-player\">\r\n                                            <span>{playerIndex + 1}. {player}</span>\r\n                                            <button onClick={() => removePlayer(teamIndex, playerIndex)} className=\"team-card-content-player-button\"><DeleteIcon size={20} color=\"#7f8fa6\" /></button>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div> : null}\r\n                            <form onSubmit={(event) => handleSubmit(event, teamIndex)} className=\"team-card-actions\" autoComplete=\"off\">\r\n                                <input disabled={team.players.length === 8 ? true : false} name={\"input\" + teamIndex} value={inputs[teamIndex] || ''} onChange={(event) => handleChange(event, teamIndex)} placeholder={\"Naam speler \" + (team.players.length + 1)} className=\"team-card-actions-input\" id={inputs[teamIndex] === \"\" ? \"error\" : \"\"} />\r\n                                <button disabled={team.players.length === 8 ? true : false} onClick={() => addPlayer(teamIndex)} className=\"team-card-actions-button\"><AddPlayerIcon /></button>\r\n                            </form>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"team-actions\">\r\n                <div className=\"win\"><span className=\"win-text\">Het team dat als eerste </span><input value={winPoints} onChange={(e) => handleChangeWinPoints(e)} type=\"number\" className=\"win-points\"></input><span className=\"win-text\"> punten haalt, wint!</span></div>\r\n                <div>\r\n                    <button onClick={() => addTeam()} disabled={teams.length === 6 ? true : false} className=\"button-style\">Team toevoegen</button>\r\n                    <button onClick={() => handleStartGame()} disabled={teams.length < 2 ? true : false} className=\"button-style\">Start Spel!</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Team;","import React from 'react';\r\nimport ITeam from '../types/Types';\r\n\r\ninterface Props {\r\n    currentTeam: ITeam;\r\n    teams: Array<ITeam>;\r\n}\r\n\r\nconst CurrentTeam = ({ currentTeam, teams }: Props) => (\r\n    <span className=\"game-current\">\r\n        {currentTeam ? <h2>{\"Team \" + ((teams.findIndex((team) => team === currentTeam)) + 1)}</h2> : null}\r\n        {currentTeam ? currentTeam.players[currentTeam.currentPlayer] + \" is aan de beurt\" : null}\r\n    </span>\r\n);\r\n\r\nexport default CurrentTeam;","import React from 'react';\r\nimport ITeam from '../types/Types';\r\nimport '../styles/Game.scss';\r\nimport CurrentTeam from './CurrentTeam';\r\n\r\ninterface Props {\r\n    currentTeam: ITeam;\r\n    teams: Array<ITeam>;\r\n    onDiceRolled: (value: number) => void;\r\n    maxDice: number;\r\n}\r\n\r\nconst Dice = ({ currentTeam, teams, maxDice, onDiceRolled }: Props) => {\r\n\r\n    const rollDice = (max: number): void => {\r\n        onDiceRolled(Math.floor(Math.random() * Math.floor(max)));\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-dice\">\r\n            <h2 className=\"game-dice-title\">Gooi de dobbelsteen!</h2>\r\n            <CurrentTeam currentTeam={currentTeam} teams={teams} />\r\n            <button onClick={() => rollDice(maxDice)} className=\"game-dice-button dice-grow\">\r\n                ?\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Dice;","import React, { useState, useEffect } from 'react';\r\nimport '../styles/Timer.scss';\r\n\r\ninterface Props {\r\n    doneTimer: () => void;\r\n}\r\n\r\nconst Timer = ({ doneTimer }: Props) => {\r\n    const [timerValue, setTimerValue] = useState<number>(30);\r\n\r\n    useEffect(() => {\r\n        const countdownTimer = (): void => {\r\n            timerValue > 0 ? setTimeout(() => setTimerValue(timerValue - 1), 1000) : doneTimer();\r\n        }\r\n\r\n        countdownTimer();\r\n    }, [timerValue, doneTimer]);\r\n\r\n\r\n    return (\r\n        <div className=\"circle center\">\r\n            <div className=\"count\">{timerValue}</div>\r\n            <div className=\"l-half\"></div>\r\n            <div className=\"r-half\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timer;","import React, { useState, useEffect } from 'react';\r\nimport Timer from './Timer';\r\nimport dutchWords from '../nl.json';\r\nimport ITeam from '../types/Types.jsx';\r\nimport '../styles/Words.scss';\r\n\r\ninterface Props {\r\n    diceValue: number;\r\n    currentTeamIndex: number;\r\n    currentTeam: ITeam;\r\n    currentPoints: number;\r\n    doneTimer: () => void;\r\n    getCorrectWords: (amount: number) => void;\r\n}\r\n\r\nconst Words = (props: Props) => {\r\n    const [words, setWords] = useState<Array<string>>([]);\r\n\r\n    useEffect(() => {\r\n        const shuffledCategories = dutchWords.categories.sort(() => 0.5 - Math.random());\r\n        let selectedCategories = shuffledCategories.slice(0, 5);\r\n        let cWords: Array<string> = [];\r\n\r\n        for (let i = 0; i < selectedCategories.length; i++) {\r\n            let random = selectedCategories[i].words[Math.floor(Math.random() * selectedCategories[i].words.length)];\r\n            cWords.push(random);\r\n        }\r\n\r\n        setWords(cWords);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"words-wrapper\">\r\n            <Timer doneTimer={() => props.doneTimer()} />\r\n            <div className=\"words-card\">\r\n                <div className=\"words-title-dice\">\r\n                    <div className=\"words-current\">\r\n                        {props.currentTeam ? <h2 className=\"words-current-team-title\">{\"Team \" + props.currentTeamIndex}</h2> : null}\r\n                        {props.currentTeam ? <span>{props.currentTeam.players[props.currentTeam.currentPlayer] + \" is aan de beurt\"}</span> : null}\r\n                    </div>\r\n                    <div className=\"words-dice-wrapper\">\r\n                        <h2 className=\"words-title\">Je gooide:</h2>\r\n                        <div className=\"words-dice\">\r\n                            {props.diceValue}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr className=\"words-hr\" />\r\n                <form className=\"words-form\">\r\n                    {words.map((word, index) => {\r\n                        return (\r\n                            <label key={index} className=\"words-form-label\">\r\n                                <input type=\"checkbox\" name={word} value={word} onChange={() => {\r\n                                    props.getCorrectWords(document.querySelectorAll('input[type=\"checkbox\"]:checked').length);\r\n                                }} />\r\n                                <span className=\"words-form-label-text\">{word}</span>\r\n                                <span className=\"words-form-checkmark\"></span>\r\n                            </label>\r\n                        );\r\n                    })}\r\n                </form>\r\n                <hr className=\"words-hr\" />\r\n                <div className=\"words-result-wrapper\">\r\n                    <span className=\"words-result\">Totaal punten: <span className=\"words-result-value\">{props.currentPoints}</span></span>\r\n                    {((props.currentPoints + props.diceValue) - 5) === 0 ? <button className=\"button-style-inverted\" onClick={() => props.doneTimer()}>Volgende</button> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Words;","import React, { useState } from 'react';\r\nimport CurrentTeam from './CurrentTeam';\r\nimport ITeam from '../types/Types';\r\nimport '../styles/Countdown.scss';\r\n\r\ninterface Props {\r\n    diceValue: number;\r\n    currentTeam: ITeam;\r\n    teams: Array<ITeam>;\r\n    doneCountdown: () => void;\r\n}\r\n\r\nconst Countdown = ({ diceValue, currentTeam, teams, doneCountdown }: Props) => {\r\n    const [countdownValue, setCountdownValue] = useState<number>(5);\r\n\r\n    const countdownToStart = (): void => {\r\n        countdownValue > 0 ? setTimeout(() => setCountdownValue(countdownValue - 1), 1000) : doneCountdown();\r\n    }\r\n\r\n    countdownToStart();\r\n\r\n    return (\r\n        <div className=\"game-countdown\">\r\n            <h2 className=\"game-countdown-title\">Klaar?</h2>\r\n            <CurrentTeam\r\n                currentTeam={currentTeam}\r\n                teams={teams} />\r\n            <div className=\"circle-c center-c\">\r\n                <div className=\"count-c\">{countdownValue}</div>\r\n                <div className=\"l-half-c\"></div>\r\n                <div className=\"r-half-c\"></div>\r\n            </div>\r\n            <h2 className=\"game-countdown-title\">Je gooide:</h2>\r\n            <div className=\"game-countdown-dice\">\r\n                {diceValue}\r\n            </div>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Countdown;","import React from 'react';\r\nimport ITeam from '../types/Types';\r\nimport '../styles/Win.scss';\r\nconst Confetti = require('react-confetti');\r\n\r\ntype Props = {\r\n    team: ITeam;\r\n}\r\n\r\nconst Win = ({team}: Props) => {\r\n    return (\r\n        <div className=\"win-wrapper\">\r\n            <Confetti/>\r\n            <h1>Gefeliciteerd!</h1>\r\n            <h2>Het team van {team.players[0]} wint!</h2>\r\n            <button className=\"button-style\" onClick={() => window.location.replace(\"/30s/\")}>Speel opnieuw</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Win;","import React from 'react';\r\nimport TrophyIcon from 'mdi-react/TrophyIcon';\r\nimport ITeam from '../types/Types';\r\n\r\ninterface Props {\r\n    teams: Array<ITeam>;\r\n    winPointsValue: number;\r\n    setNextTeam: () => void;\r\n}\r\n\r\nconst Result = ({teams, winPointsValue, setNextTeam}: Props) => {\r\n\r\n    const getTeamsSortedByPoints = () => {\r\n        var sortedTeams = teams.slice(0);\r\n        sortedTeams.sort((team1, team2) => {\r\n            return team2.points - team1.points;\r\n        });\r\n\r\n        return sortedTeams.map((team, i) => {\r\n            return (\r\n                <tr key={i} className=\"game-results-table-row\">\r\n                    <td>\r\n                        {i === 0 ? <TrophyIcon color=\"#e1b12c\" /> : null}\r\n                        {i === 1 ? <TrophyIcon color=\"#bdc3c7\" /> : null}\r\n                        {i === 2 ? <TrophyIcon color=\"#cd7f32\" /> : null}\r\n                    </td>\r\n                    <td>\r\n                        {team.players[0]}\r\n                    </td>\r\n                    <td>\r\n                        {team.points}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-results-wrapper\">\r\n            <div className=\"game-results\">\r\n                <h2 className=\"game-results-title\">Puntentotaal</h2>\r\n                <p>Het team dat als eerste {winPointsValue} punten haalt, wint!</p>\r\n                <table className=\"game-results-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>\r\n                                Team van\r\n                                </th>\r\n                            <th>\r\n                                Punten\r\n                                </th>\r\n                        </tr>\r\n                        {getTeamsSortedByPoints()}\r\n                    </tbody>\r\n                </table>\r\n                <button onClick={() => setNextTeam()} className=\"button-style-inverted\">Volgende ronde</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Result;","import React from 'react';\r\nimport '../styles/Help.scss';\r\n\r\nconst Help = (props: any) => {\r\n    return (\r\n        <div className=\"help-wrapper\">\r\n            <h2>Speluitleg</h2>\r\n            <h3>Teams</h3>\r\n            <p>Ieder team moet bestaan uit minimaal 2 spelers. Er kunnen maximaal 6 teams worden aangemaakt met elk maximaal 8 spelers.</p>\r\n            <p>Stel hier ook het puntenaantal in dat moet worden behaald om te winnen.</p>\r\n            <h3>Dobbelsteen</h3>\r\n            <p>Gooi de dobbelsteen! Dit zijn eigenlijk je strafpunten, dus het beste is zo weinig mogelijk aantal ogen te gooien. Gelukkig bestaat de dobbelsteen alleen uit 0, 1 en 2 ogen.</p>\r\n            <h3>Woorden raden</h3>\r\n            <p>\r\n                Als de ronde begint, moet de speler die aan de beurt is de 5 woorden uitleggen aan de teamgenoten, zonder dat diegene de worden mag benoemen.\r\n            </p>\r\n            <p>\r\n                De teamgenoten mogen de woorden zelf uiteraard niet zien, maar moeten de woorden die hun teamgenoot uitlegd zo snel mogelijk raden.\r\n            </p>\r\n            <p>\r\n                Als een woord geraden is, kan deze worden aangevinkt. Bij 5 woorden correct kan er worden geskipt naar de tussenuitslag.\r\n            </p>\r\n            <h3>Winnen</h3>\r\n            <p>\r\n                Het team dat als eerste het aantal punten haalt dat is ingesteld om te winnen, gaat er met de roem vandoor.\r\n            </p>\r\n            <div>\r\n                <button className=\"button-style\" onClick={() => props.resetGameStage()}>Ik snap het!</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Help;","import React, { useState, useEffect } from 'react';\r\nimport ITeam from '../types/Types';\r\nimport Team from './Team';\r\nimport Dice from './Dice';\r\nimport Words from './Words';\r\nimport Countdown from './Countdown';\r\nimport Win from './Win';\r\nimport Result from './Result';\r\nimport Help from './Help';\r\nimport '../styles/Game.scss';\r\n\r\nconst Game = () => {\r\n    const [teams, setTeams] = useState<Array<ITeam>>([]);\r\n    const [currentTeam, setCurrentTeam] = useState();\r\n    const [diceValue, setDiceValue] = useState<number>();\r\n    const [gameStage, setGameStage] = useState<number>(0);\r\n    const [correctWords, setCorrectWords] = useState<number>(0);\r\n    const [winPointsValue, setWinPointsValue] = useState<number>();\r\n    const [gameOver, setGameOver] = useState<ITeam>();\r\n\r\n    const setNextTeam = (): void => {\r\n        const currentTeamIndex = teams.findIndex((team) => team.players === currentTeam.players);\r\n        setDiceValue(undefined);\r\n        setCorrectWords(0);\r\n        setGameStage(1);\r\n\r\n        if (currentTeamIndex === (teams.length - 1)) {\r\n            setCurrentTeam(teams[0]);\r\n        } else {\r\n            setCurrentTeam(teams[currentTeamIndex + 1]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getRandomTeam = (): ITeam => {\r\n            return teams[Math.floor(Math.random() * teams.length)];\r\n        }\r\n\r\n        if (!currentTeam) {\r\n            setCurrentTeam(getRandomTeam);\r\n        }\r\n        if (winPointsValue) {\r\n            teams.map((team) => {\r\n                if (team.points === winPointsValue || team.points > winPointsValue) {\r\n                    setGameOver(team);\r\n                    return null;\r\n                } else {\r\n                    return null;\r\n                }\r\n            })\r\n        }\r\n    }, [teams, currentTeam, winPointsValue]);\r\n\r\n    const getHelp = (): void => {\r\n        setGameStage(5);\r\n    }\r\n\r\n    const resetGameStage = (): void => {\r\n        setGameStage(0);\r\n    }\r\n\r\n    const doneTeam = (createdTeams: Array<ITeam>, winPoints: number): void => {\r\n        setWinPointsValue(winPoints);\r\n        setTeams(createdTeams);\r\n        setGameStage(1);\r\n    }\r\n\r\n    const doneDiceRoll = (value: number): void => {\r\n        setDiceValue(value);\r\n        setGameStage(2);\r\n    }\r\n\r\n    const doneCountdown = (): void => {\r\n        setGameStage(3);\r\n    }\r\n\r\n    const doneTimer = (): void => {\r\n        addPoints();\r\n        setGameStage(4);\r\n    }\r\n\r\n    const addPoints = (): void => {\r\n        let teamIndex = teams.findIndex((team) => team === currentTeam);\r\n        setTeams(prevTeams => {\r\n            return prevTeams.map((team, tidx) => {\r\n                if ((teamIndex === tidx) && diceValue !== undefined) {\r\n                    if (team.currentPlayer === team.players.length - 1) {\r\n                        return { ...prevTeams[teamIndex], points: prevTeams[teamIndex].points + (correctWords - diceValue), currentPlayer: 0 };\r\n                    } else {\r\n                        return { ...prevTeams[teamIndex], points: prevTeams[teamIndex].points + (correctWords - diceValue), currentPlayer: prevTeams[teamIndex].currentPlayer + 1 };\r\n                    }\r\n                } else {\r\n                    return team;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    if (gameOver) {\r\n        return <Win team={gameOver} />;\r\n    } else {\r\n        switch (gameStage) {\r\n            case 0:\r\n                return <Team\r\n                    onTeamsCreated={(createdTeams: Array<ITeam>, winPoints: number) => doneTeam(createdTeams, winPoints)}\r\n                    getHelp={getHelp} />;\r\n            case 1:\r\n                return <Dice\r\n                    currentTeam={currentTeam}\r\n                    teams={teams}\r\n                    onDiceRolled={(value: number) => doneDiceRoll(value)}\r\n                    maxDice={3} />;\r\n            case 2:\r\n                return <Countdown\r\n                    diceValue={diceValue ? diceValue : 0}\r\n                    currentTeam={currentTeam}\r\n                    teams={teams}\r\n                    doneCountdown={() => doneCountdown()} />;\r\n            case 3:\r\n                return <Words\r\n                    diceValue={diceValue ? diceValue : 0}\r\n                    currentTeamIndex={(teams.findIndex((team) => team === currentTeam)) + 1}\r\n                    currentTeam={currentTeam}\r\n                    currentPoints={correctWords - (diceValue !== undefined ? diceValue : 0)}\r\n                    doneTimer={() => doneTimer()}\r\n                    getCorrectWords={(amount: number) => {\r\n                        setCorrectWords(amount);\r\n                    }} />;\r\n            case 4:\r\n                return <Result\r\n                    teams={teams}\r\n                    winPointsValue={winPointsValue || 0}\r\n                    setNextTeam={() => setNextTeam()} />;\r\n            case 5:\r\n                return <Help resetGameStage={resetGameStage}/>;\r\n            default:\r\n                return <h1>Not found</h1>;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Game;","import React from 'react';\r\nimport '../styles/Credit.scss';\r\n\r\nconst Credit = () => (\r\n    <div className=\"credit-wrapper\">\r\n        <a className=\"credit\" href=\"https://jvink.github.io/portfolio/#/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            More by Jurian Vink\r\n        </a>\r\n    </div>\r\n);\r\n\r\nexport default Credit;","import React from 'react';\r\nimport Logo from './components/Logo';\r\nimport Game from './components/Game';\r\nimport Credit from './components/Credit';\r\nimport './App.scss';\r\n\r\n\r\nconst setRandomBackGroundColor = (): void => {\r\n  const colors = ['#9c88ff', '#0097e6', '#e1b12c', '#27ae60', '#40739e', '#c23616', '#8e44ad', '#e67e22'];\r\n  const randomColor = colors[Math.floor(Math.random() * colors.length)];\r\n  const body: HTMLElement = document.body;\r\n  body.style.backgroundColor = randomColor;\r\n}\r\n\r\nsetRandomBackGroundColor();\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <Logo />\r\n      <div className=\"app-game-wrapper\">\r\n        <Game />\r\n      </div>\r\n      <Credit />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}